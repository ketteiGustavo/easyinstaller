name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # For now, we start with one distro. We can add more later.
        # Distros: [debian, ubuntu, fedora, archlinux]
        distro: [debian]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binary for ${{ matrix.distro }}
        run: |
          docker run --rm \
            -v "${GITHUB_WORKSPACE}":/app \
            -w /app \
            -e HOST_UID=$(id -u) \
            -e HOST_GID=$(id -g) \
            python:3.13-bookworm \
            /bin/bash -c "
              apt-get update && apt-get install -y patchelf gcc ccache && \
              pip install poetry && \
              poetry install && \
              poetry run python -m nuitka --onefile --standalone --output-dir=dist --output-filename=ei-${{ matrix.distro }}-amd64 --include-module=typer --include-module=rich --include-module=click --include-module=questionary src/easyinstaller/main.py && \
              chown -R \$HOST_UID:\$HOST_GID dist
            "

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  create-release:
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
